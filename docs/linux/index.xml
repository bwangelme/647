<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>647 Universe – Linux</title>
    <link>https://bwangelme.github.io/647/docs/linux/</link>
    <description>Recent content in Linux on 647 Universe</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>cn</language>
    
	  <atom:link href="https://bwangelme.github.io/647/docs/linux/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Docs: curl</title>
      <link>https://bwangelme.github.io/647/docs/linux/curl/</link>
      <pubDate>Tue, 01 Aug 2023 11:50:58 +0800</pubDate>
      
      <guid>https://bwangelme.github.io/647/docs/linux/curl/</guid>
      <description>
        
        
        &lt;h2 id=&#34;curl-post-json-数据&#34;&gt;curl POST JSON 数据&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;curl -X PUT -H &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Content-Type: application/json&amp;#34;&lt;/span&gt; -d &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;@/tmp/demo.json&amp;#39;&lt;/span&gt; :9200/demo
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ø&amp;gt; cat /tmp/demo.json
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;settings&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;number_of_shards&amp;#34;&lt;/span&gt;: 1,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;number_of_replicas&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;使用---resolve-选项替换域名&#34;&gt;使用 &lt;code&gt;--resolve&lt;/code&gt; 选项替换域名&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;将 &lt;a href=&#34;https://www.google.com&#34;&gt;www.google.com&lt;/a&gt; 替换成 127.0.0.1，并访问 8000 端口&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;curl -v --resolve www.google.com:8000:127.0.0.1 http://www.google.com:8000/ping&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;将 &lt;a href=&#34;https://www.google.com&#34;&gt;https://www.google.com&lt;/a&gt; 替换成 127.0.0.1，此时 curl 会忽略证书和域名不匹配的问题&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;curl -v --resolve www.google.com:443:127.0.0.1 https://www.google.com/ping&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;将 &lt;a href=&#34;http://www.google.com&#34;&gt;http://www.google.com&lt;/a&gt; 替换成 127.0.0.1，http 默认访问 80 端口&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;curl -v --resolve www.google.com:80:127.0.0.1 http://www.google.com/ping&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;--fail-和---fail-with-body&#34;&gt;&lt;code&gt;--fail&lt;/code&gt; 和 &lt;code&gt;--fail-with-body&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;这两个选项都可以让 curl 在接收到 400 及以上的 HTTP 响应码的时候，将退出码设置为 22&lt;/p&gt;
&lt;p&gt;&lt;code&gt;--fail-with-body&lt;/code&gt; 会输出服务端返回的内容到 stdout 或文件中&lt;/p&gt;
&lt;p&gt;&lt;code&gt;--fail&lt;/code&gt; 不会有任何输出，当服务端返回的是认证相关的状态码时(401/407), 可能会让使用者误以为出错了&lt;/p&gt;
&lt;h3 id=&#34;使用场景&#34;&gt;使用场景&lt;/h3&gt;
&lt;p&gt;在一个 dockerfile 中，我期望下载项目的 &lt;code&gt;go.mod&lt;/code&gt; 和 &lt;code&gt;go.sum&lt;/code&gt; 文件，然后再执行 &lt;code&gt;go mod download&lt;/code&gt;。
这样可以在 clone 代码之前，先下载 go module 文件。&lt;/p&gt;
&lt;p&gt;如果项目的代码变了，但是依赖并没有变，因为 docker build 的缓存原理，可以省去下载 go module 的步骤。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;...
ARG app_repo
ARG app_commit

RUN [[ ! -d /tmp/app ]] &amp;amp;&amp;amp; mkdir /tmp/app &amp;amp;&amp;amp; \
    curl -s https://raw.githubusercontent.com/${app_repo}/${app_commit}/go.mod -o /tmp/app/go.mod &amp;amp;&amp;amp; \
    curl -s https://raw.githubusercontent.com/${app_repo}/${app_commit}/go.sum -o /tmp/app/go.sum

RUN cd /tmp/app &amp;amp;&amp;amp; go mod download
...
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;当 app_repo 和 app_commit 参数错误，导致对应的 go.mod 文件不存在，curl 会得到 404 的 HTTP 响应码，此时我期望 docker build 出错。&lt;/p&gt;
&lt;p&gt;但实际上并不会出错，docker build 会继续执行，直到 go mod download 文件无法识别 go.mod 文件，docker build 才会异常退出。&lt;/p&gt;
&lt;p&gt;显示的错误内容如下:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;0.467 go: errors parsing go.mod:
0.467 /tmp/app/go.mod:1: unknown directive: 404:
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;当我给 &lt;code&gt;curl&lt;/code&gt; 加上了 &lt;code&gt;--fail&lt;/code&gt; 选项之后，程序就会在下载 go.mod 出错时直接退出。显示的错误如下:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ERROR: failed to solve: 
	process &amp;#34;
		/bin/bash -c [[ ! -d /tmp/app ]] &amp;amp;&amp;amp; mkdir /tmp/app &amp;amp;&amp;amp;
		curl --fail -s https://raw.githubusercontent.com/${app_repo}/${app_commit}/go.mod -o /tmp/app/go.mod &amp;amp;&amp;amp;
		curl -s https://raw.githubusercontent.com/${app_repo}/${app_commit}/go.sum -o /tmp/app/go.sum
	&amp;#34; did not complete successfully: exit code: 22
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;最终的 dockerfile 代码及复现命令&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;FROM golang:1.19
SHELL [&amp;#34;/bin/bash&amp;#34;, &amp;#34;-c&amp;#34;]

ARG app_repo
ARG app_commit

RUN go env -w GOPROXY=https://goproxy.cn,direct

RUN [[ ! -d /tmp/app ]] &amp;amp;&amp;amp; mkdir /tmp/app &amp;amp;&amp;amp; \
    curl --fail -s https://raw.githubusercontent.com/${app_repo}/${app_commit}/go.mod -o /tmp/app/go.mod &amp;amp;&amp;amp; \
    curl -s https://raw.githubusercontent.com/${app_repo}/${app_commit}/go.sum -o /tmp/app/go.sum

RUN cd /tmp/app &amp;amp;&amp;amp; go mod download
RUN HTTP_PROXY=&amp;#39;http://改成你自己的代理&amp;#39; HTTPS_PROXY=&amp;#39;http://改成你自己的代理&amp;#39; git clone https://github.com/${app_repo}.git ~/app
RUN cd ~/app &amp;amp;&amp;amp; git reset --hard ${app_commit} &amp;amp;&amp;amp; go build .
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;复现命令&lt;/li&gt;
&lt;/ul&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# 注意这个 app_commit 是一个不存在的 commit
docker build -t curl_test --build-arg app_repo=bwangelme/rdcdemo --build-arg app_commit=2f24a0658d7feb0205e7d75b7ae218ff6495e8f3 .
&lt;/code&gt;&lt;/pre&gt;
      </description>
    </item>
    
    <item>
      <title>Docs: lsof</title>
      <link>https://bwangelme.github.io/647/docs/linux/lsof/</link>
      <pubDate>Thu, 02 Mar 2023 12:43:09 +0800</pubDate>
      
      <guid>https://bwangelme.github.io/647/docs/linux/lsof/</guid>
      <description>
        
        
        &lt;h2 id=&#34;按照网络状态筛选进程的-fd&#34;&gt;按照网络状态筛选进程的 fd&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo lsof -i -sTCP:LISTEN -a -p &amp;lt;pid&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;-a&lt;/code&gt; 表示 and, 前后两个条件要一起生效&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;-i&lt;/code&gt; 和 &lt;code&gt;-s&lt;/code&gt; 一起用，表示可以按照 TCP/UDP 状态来筛选 fd&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;列出进程 &lt;code&gt;&amp;lt;pid&amp;gt;&lt;/code&gt; 建立的所有 TCP 连接&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo lsof -i -sTCP:ESTABLISHED -a -p &amp;lt;pid&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;列出进程 &lt;code&gt;&amp;lt;pid&amp;gt;&lt;/code&gt; 所有 IDLE 状态的 UDP 连接&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo lsof -i -sUDP:IDLE -a -p &amp;lt;pid&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;根据 Unix 发行版本的不同，TCP/UDP 状态也会有不同的名字:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常用的 TCP 状态是: &lt;code&gt;CLOSED&lt;/code&gt;, &lt;code&gt;IDLE&lt;/code&gt;, &lt;code&gt;BOUND&lt;/code&gt;, &lt;code&gt;LISTEN&lt;/code&gt;, &lt;code&gt;ESTABLISHED&lt;/code&gt;, &lt;code&gt;SYN_SENT&lt;/code&gt;, &lt;code&gt;SYN_RCDV&lt;/code&gt;, &lt;code&gt;ESTABLISHED&lt;/code&gt;, &lt;code&gt;CLOSE_WAIT&lt;/code&gt;, &lt;code&gt;FIN_WAIT1&lt;/code&gt;, &lt;code&gt;CLOSING&lt;/code&gt;, &lt;code&gt;LAST_ACK&lt;/code&gt;, &lt;code&gt;FIN_WAIT_2&lt;/code&gt;, &lt;code&gt;TIME_WAIT&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;常用的 UDP 状态是: &lt;code&gt;Unbound&lt;/code&gt;, &lt;code&gt;Idle&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;按照-fd-number-查找进程的-fd&#34;&gt;按照 fd number 查找进程的 fd&lt;/h2&gt;
&lt;p&gt;使用 &lt;code&gt;strace&lt;/code&gt; 查看进程的系统调用的时候，经常能够看到在某个 fd 上执行读写操作，例如:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;write&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;267, &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;\1\0\0\0\0\0\0\0&amp;#34;&lt;/span&gt;, 8&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;       &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;8&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;read&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;5405, &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;# Kubernetes-managed hosts file &amp;#34;&lt;/span&gt;..., 4096&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;4096&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;我们想要查一下这个 267 和 5405 具体代表了什么连接，可以用&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo lsof -d &amp;lt;fd_number&amp;gt; -a -p &amp;lt;pid&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;例如我利用 strace 查看飞书 app 的系统调用，看到以下的信息&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ø&amp;gt; sudo strace -p &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;8261&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;strace: Process &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;8261&lt;/span&gt; attached
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;restart_syscall&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;&amp;lt;... resuming interrupted &lt;span style=&#34;color:#204a87&#34;&gt;read&lt;/span&gt; ...&amp;gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;openat&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;AT_FDCWD, &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;/proc/self/status&amp;#34;&lt;/span&gt;, O_RDONLY&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;4&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;read&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;4, &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Name:\tfeishu\nUmask:\t0002\nState:\t&amp;#34;&lt;/span&gt;..., 1024&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1024&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;close&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;4&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;                                &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;futex&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;0x7ff0a7ffead8, FUTEX_WAKE_PRIVATE, 2147483647&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;futex&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;0x7ff0a7ffea88, FUTEX_WAKE_PRIVATE, 1&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;recvmsg&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;23, &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;msg_namelen&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;0&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;}&lt;/span&gt;, 0&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;         &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; -1 EAGAIN &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;资源暂时不可用&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;recvmsg&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;23, &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;msg_namelen&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;0&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;}&lt;/span&gt;, 0&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;         &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; -1 EAGAIN &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;资源暂时不可用&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;poll&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;([{&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;fd&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;9, &lt;span style=&#34;color:#000&#34;&gt;events&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;POLLIN&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;}&lt;/span&gt;, &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;fd&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;10, &lt;span style=&#34;color:#000&#34;&gt;events&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;POLLIN&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;}&lt;/span&gt;, &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;fd&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;22, &lt;span style=&#34;color:#000&#34;&gt;events&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;POLLIN&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;}&lt;/span&gt;, &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;fd&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;23, &lt;span style=&#34;color:#000&#34;&gt;events&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;POLLIN&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;}&lt;/span&gt;, &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;fd&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;67, &lt;span style=&#34;color:#000&#34;&gt;events&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;POLLIN&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;}]&lt;/span&gt;, 5, 0&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;Timeout&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;recvmsg&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;23, &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;msg_namelen&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;0&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;}&lt;/span&gt;, 0&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;         &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; -1 EAGAIN &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;资源暂时不可用&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;recvmsg&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;23, &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;msg_namelen&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;0&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;}&lt;/span&gt;, 0&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;         &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; -1 EAGAIN &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;资源暂时不可用&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;poll&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;([{&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;fd&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;9, &lt;span style=&#34;color:#000&#34;&gt;events&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;POLLIN&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;}&lt;/span&gt;, &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;fd&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;10, &lt;span style=&#34;color:#000&#34;&gt;events&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;POLLIN&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;}&lt;/span&gt;, &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;fd&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;22, &lt;span style=&#34;color:#000&#34;&gt;events&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;POLLIN&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;}&lt;/span&gt;, &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;fd&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;23, &lt;span style=&#34;color:#000&#34;&gt;events&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;POLLIN&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;}&lt;/span&gt;, &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;fd&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;67, &lt;span style=&#34;color:#000&#34;&gt;events&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;POLLIN&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;}]&lt;/span&gt;, 5, 200&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;([{&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;fd&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;10, &lt;span style=&#34;color:#000&#34;&gt;revents&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;POLLIN&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;}])&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;read&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;10, &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;!&amp;#34;&lt;/span&gt;, 2&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;                        &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;futex&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;0x7ff0a7ffead8, FUTEX_WAKE_PRIVATE, 2147483647&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;futex&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;0x7ff0a7ffea88, FUTEX_WAKE_PRIVATE, 1&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;futex&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;0x7ff0a0001eb8, FUTEX_WAKE_PRIVATE, 1&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;openat&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;AT_FDCWD, &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;/proc/self/status&amp;#34;&lt;/span&gt;, O_RDONLY&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;4&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;read&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;4, &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Name:\tfeishu\nUmask:\t0002\nState:\t&amp;#34;&lt;/span&gt;..., 1024&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1024&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;我想知道 fd 4 代表了什么，执行 &lt;code&gt;sudo lsof -d 4 -a -p 8261&lt;/code&gt;，可以看到它是我的电脑和 &lt;code&gt;220.181.131.241&lt;/code&gt; 建立的一个 https 连接。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ø&amp;gt; sudo lsof -d &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;4&lt;/span&gt; -a -p &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;8261&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;COMMAND  PID      USER   FD   TYPE  DEVICE SIZE/OFF NODE NAME
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;feishu  &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;8261&lt;/span&gt; xuyundong    4u  IPv4 &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2613086&lt;/span&gt;      0t0  TCP 192.168.252.88:35810-&amp;gt;220.181.131.241:https &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;ESTABLISHED&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;查看端口占用&#34;&gt;查看端口占用&lt;/h2&gt;
&lt;p&gt;有时候我们启动程序的时候，发现端口被占用了，可以用 &lt;code&gt;lsof -i:xxx&lt;/code&gt; 来查看端口被哪个进程占用了，例如:&lt;/p&gt;
&lt;p&gt;下面这条命令显示 3306 端口被 &lt;code&gt;360702&lt;/code&gt; 和 &lt;code&gt;360709&lt;/code&gt; 两个进程占用了。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ø&amp;gt; sudo lsof -i:3306
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;COMMAND      PID USER   FD   TYPE  DEVICE SIZE/OFF NODE NAME
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker-pr &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;360702&lt;/span&gt; root    4u  IPv4 &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1842886&lt;/span&gt;      0t0  TCP *:mysql &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;LISTEN&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker-pr &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;360709&lt;/span&gt; root    4u  IPv6 &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1842889&lt;/span&gt;      0t0  TCP *:mysql &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;LISTEN&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;查看容器的网络调用&#34;&gt;查看容器的网络调用&lt;/h2&gt;
&lt;h3 id=&#34;构建镜像&#34;&gt;构建镜像&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;download.py&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-py&#34; data-lang=&#34;py&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#!/usr/bin/env python3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# -*- coding: utf-8 -*-&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;requests&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;resp&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;requests&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;get&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;https://releases.ubuntu.com/22.04.2/ubuntu-22.04.2-desktop-amd64.iso?_ga=2.131295240.668169970.1684741981-917190618.1681460407&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;print&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;resp&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;status_code&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;Dockerfile&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-dockerfile&#34; data-lang=&#34;dockerfile&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;FROM&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt; python:3.10&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;RUN&lt;/span&gt; pip install requests&lt;span style=&#34;color:#a40000&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;COPY&lt;/span&gt; download.py /download.py&lt;span style=&#34;color:#a40000&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;ENTRYPOINT&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;python&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;/download.py&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;准备上述两个文件，然后执行&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;docker build -t test_download .
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;构建我们用于调试的镜像, &lt;code&gt;test_download&lt;/code&gt; 。&lt;/p&gt;
&lt;h3 id=&#34;启动阻塞的容器&#34;&gt;启动阻塞的容器&lt;/h3&gt;
&lt;p&gt;执行以下命令，启动一个阻塞在网络请求中的容器。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;docker run --rm test_download
&lt;/code&gt;&lt;/pre&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;这个例子不太好，因为 &lt;code&gt;releases.ubuntu.com&lt;/code&gt; 还比较健康，会持续地返回内容，现实中我们遇到的情况是，服务器完全不返回内容，客户端也没有设置超时时间，完全处于阻塞的状态。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;查找容器的-pid&#34;&gt;查找容器的 pid&lt;/h3&gt;
&lt;p&gt;根据容器的 ID, 我们通过 &lt;code&gt;docker inspect &amp;lt;id&amp;gt;| rg -i pid&lt;/code&gt; 可以获得容器的进程 ID&lt;/p&gt;
&lt;p&gt;如果你使用的是 containerd, 可以使用 &lt;code&gt;crictl inspect &amp;lt;id&amp;gt; | rg -i pid&lt;/code&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ø&amp;gt; docker ps
CONTAINER ID   IMAGE           COMMAND                 CREATED          STATUS          PORTS     NAMES
bf5846384913   test_download   &amp;#34;python /download.py&amp;#34;   37 seconds ago   Up 36 seconds             friendly_wozniak
ø&amp;gt; docker inspect bf5846384913 | rg -i pid
            &amp;#34;Pid&amp;#34;: 726678,
            &amp;#34;PidMode&amp;#34;: &amp;#34;&amp;#34;,
            &amp;#34;PidsLimit&amp;#34;: null,
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;利用-strace-查看进程的状态&#34;&gt;利用 strace 查看进程的状态&lt;/h3&gt;
&lt;p&gt;从 strace 的输出中可以看到，进程一直在从 3 号 fd 上读取数据&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;root@Macmini:~# strace -p &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;726678&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;strace: Process &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;726678&lt;/span&gt; attached
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;read&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;3, &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Z\263\351\331\315\17\330\205\222\361\21\235&amp;#39;Kp\301w\256\365|\275K\326y\350@\305\300\325\262\fk&amp;#34;&lt;/span&gt;..., 13131&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1448&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;read&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;3, &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;\317GKJ\324O)1\5\272\\\&amp;#34;\24\360s\177\263\223#\376\360\35\360\226\240\214mf\374\243\222\335&amp;#34;&lt;/span&gt;..., 11683&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;11683&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;read&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;3, &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;\27\3\3@\21&amp;#34;&lt;/span&gt;, 5&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;               &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;5&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;read&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;3, &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;\22c\367U@\243\377\325\255\n0\376\79J\244\v9O4\233Kq\0233\304k\6\356dy\20&amp;#34;&lt;/span&gt;..., 16401&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;16401&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;read&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;3, &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;\27\3\3@\21&amp;#34;&lt;/span&gt;, 5&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;               &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;5&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;read&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;3, &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;[\244K\30\7\30?[\210\313\364\335\t\321&amp;gt;l\270\2\365\262\307|\376\211.\376\342%\361\34\31\246&amp;#34;&lt;/span&gt;..., 16401&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;16401&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;read&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;3, &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;\27\3\3@\21&amp;#34;&lt;/span&gt;, 5&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;               &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;5&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;read&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;3, &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;\335\373\354\320:SF\244o#\244\377Ll\21\366AT\374vgYD\2418\305\340\313||\243;&amp;#34;&lt;/span&gt;..., 16401&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;16401&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;read&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;3, &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;\27\3\3@\21&amp;#34;&lt;/span&gt;, 5&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;               &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;5&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;read&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;3, &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;X \300\240\252IoZ\352W&lt;/span&gt;$&lt;span style=&#34;color:#4e9a06&#34;&gt;\255\266\324\304q\306\23\226-b\212\300\271\222pI\270\33\tcn&amp;#34;&lt;/span&gt;..., 16401&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;16401&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;read&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;3, &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;\27\3\3@\21&amp;#34;&lt;/span&gt;, 5&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;               &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;5&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;read&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;3, &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;\213\331\225\331b\2405\204\f\213\32\r\250;\250\326.\4l\221\230^0\272{\317\32he\262V\223&amp;#34;&lt;/span&gt;..., 16401&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;16401&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;brk&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;0x55fba8f48000&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;                     &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; 0x55fba8f48000
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;read&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;3, &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;\27\3\3@\21&amp;#34;&lt;/span&gt;, 5&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;               &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;5&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;read&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;3, &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;\4\317\362`-R}\360\&amp;#34;\266nZ\33\261s,\340\345\371\300;]\347\30\237\344\305\235m\360j\357&amp;#34;&lt;/span&gt;..., 16401&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;16401&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;read&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;3, &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;\27\3\3@\21&amp;#34;&lt;/span&gt;, 5&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;               &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;5&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;read&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;3, &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;1v\355\312]nG\347\240\4\210\350\241\34\257\333\307\233z\261\0\6\307\2234n\21V\27\305\272\371&amp;#34;&lt;/span&gt;..., 16401&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;16401&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;read&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;3, &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;\27\3\3@\21&amp;#34;&lt;/span&gt;, 5&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;               &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;5&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;利用-lsof-查看-fd-详细信息&#34;&gt;利用 lsof 查看 fd 详细信息&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;nsenter -n -t &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;726678&lt;/span&gt; lsof -d &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;3&lt;/span&gt; -a -p &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;726678&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;root@Macmini:~# nsenter -n -t &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;726678&lt;/span&gt; lsof -d &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;3&lt;/span&gt; -a -p &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;726678&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;COMMAND    PID USER   FD   TYPE  DEVICE SIZE/OFF NODE NAME
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;python  &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;726678&lt;/span&gt; root    3u  IPv4 &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;9813984&lt;/span&gt;      0t0  TCP 172.17.0.2:55378-&amp;gt;https-services.aerodent.canonical.com:https &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;ESTABLISHED&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;可以看到，3号fd 是一个TCP 连接，本地的 &lt;code&gt;172.17.0.2:55378&lt;/code&gt; 连接了远端的 &lt;code&gt;https-services.aerodent.canonical.com:https&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;如果我们不加 nsenter -n -t &lt;pid&gt; 来切换 network namespace 的话，lsof 输出的信息中就没有详细的客户端和服务端的地址了&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;root@Macmini:~# lsof -d &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;3&lt;/span&gt; -a -p &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;729160&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;COMMAND    PID USER   FD   TYPE DEVICE SIZE/OFF    NODE NAME
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;python  &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;729160&lt;/span&gt; root    3u  sock    0,8      0t0 &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;9829458&lt;/span&gt; protocol: TCP
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;参考链接&#34;&gt;参考链接&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://linux.die.net/man/8/lsof&#34;&gt;man lsof&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: DNS</title>
      <link>https://bwangelme.github.io/647/docs/linux/dns/</link>
      <pubDate>Sat, 09 Sep 2023 13:41:16 +0800</pubDate>
      
      <guid>https://bwangelme.github.io/647/docs/linux/dns/</guid>
      <description>
        
        
        &lt;h2 id=&#34;a-记录&#34;&gt;A 记录&lt;/h2&gt;
&lt;p&gt;Address Mapping records, 指示了对应名称的IPv4地址, A记录用来将域名转换为ip地址.&lt;/p&gt;
&lt;h2 id=&#34;aaaa-记录&#34;&gt;AAAA 记录&lt;/h2&gt;
&lt;p&gt;类似于A记录, 只不过指示的是IPv6的地址。&lt;/p&gt;
&lt;p&gt;因为 IPv6 地址长度是 IPv4 的四倍，所以用 AAAA 表示 IPv6 记录&lt;/p&gt;
&lt;h2 id=&#34;ns-记录&#34;&gt;NS 记录&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Name Server records, 用来指定对应名称的可信名称服务器 (authoritative name server)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;例如这段 dig 日志是 &lt;code&gt;j.gtld-servers.net&lt;/code&gt; 告诉我们，它不知道 &lt;code&gt;www.baidu.com&lt;/code&gt; 的 IP, 但是它告诉我们要查询 &lt;code&gt;baidu.com.&lt;/code&gt; 域的地址，可以去 ns[12345].baidu.com 这5个地址中查。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;baidu.com.              172800  IN      NS      ns2.baidu.com.
baidu.com.              172800  IN      NS      ns3.baidu.com.
baidu.com.              172800  IN      NS      ns4.baidu.com.
baidu.com.              172800  IN      NS      ns1.baidu.com.
baidu.com.              172800  IN      NS      ns7.baidu.com.
;; Received 849 bytes from 192.48.79.30#53(j.gtld-servers.net) in 316 ms
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;ptr-记录&#34;&gt;PTR 记录&lt;/h2&gt;
&lt;p&gt;Pointer records, 通过 IP 反查域名，大部分域名服务器都不支持，目前只找到了 &lt;code&gt;dns.google.&lt;/code&gt; 支持 PTR 查询&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ø&amp;gt; dig -x 8.8.4.4

;; QUESTION SECTION:
;4.4.8.8.in-addr.arpa.          IN      PTR

;; ANSWER SECTION:
4.4.8.8.in-addr.arpa.   1       IN      PTR     dns.google.
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;cname-记录&#34;&gt;CNAME 记录&lt;/h2&gt;
&lt;p&gt;又称 alias 别名，是 A 记录的别名&lt;/p&gt;
&lt;p&gt;例如以下的查询说明&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;www.baidu.com.&lt;/code&gt; 是 &lt;code&gt;www.a.shifen.com.&lt;/code&gt; 的别名&lt;/li&gt;
&lt;li&gt;&lt;code&gt;www.a.shifen.com.&lt;/code&gt; 指向了 &lt;code&gt;220.181.38.150&lt;/code&gt; 和 &lt;code&gt;220.181.38.149&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ø&amp;gt; dig -4 www.baidu.com

;; QUESTION SECTION:
;www.baidu.com.                 IN      A

;; ANSWER SECTION:
www.baidu.com.          70      IN      CNAME   www.a.shifen.com.
www.a.shifen.com.       53      IN      A       220.181.38.150
www.a.shifen.com.       53      IN      A       220.181.38.149
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;查询方式&#34;&gt;查询方式&lt;/h2&gt;
&lt;h3 id=&#34;递归查询&#34;&gt;递归查询&lt;/h3&gt;
&lt;p&gt;client 发送请求给局域网 DNS, 局域网 DNS 再去上游 DNS 服务器执行进一步查询。一级一级向上递归并回到局域网 DNS , 局域网 DNS 将查询的地址返回给客户端&lt;/p&gt;
&lt;p&gt;dig 命令默认执行的就是递归查询&lt;/p&gt;
&lt;h3 id=&#34;集中查询&#34;&gt;集中查询&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;client 发送请求给局域网 DNS 获得 DNS 根服务器的地址&lt;/li&gt;
&lt;li&gt;client 请求根服务器获得下一级 DNS 服务器地址&lt;/li&gt;
&lt;li&gt;以此往复，一级一级直到查到目标域名的 IP 地址&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;以下用集中查询的方式查询 &lt;a href=&#34;https://www.baidu.com&#34;&gt;www.baidu.com&lt;/a&gt; IP 地址的过程&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ø&amp;gt; dig -4 +trace www.baidu.com
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 获取根服务器的名字列表&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt; &amp;lt;&amp;lt;&amp;gt;&amp;gt; DiG 9.18.12-0ubuntu0.22.04.2-Ubuntu &amp;lt;&amp;lt;&amp;gt;&amp;gt; -4 +trace www.baidu.com
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;;&lt;/span&gt; global options: +cmd
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;.                       &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2229&lt;/span&gt;    IN      NS      k.root-servers.net.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;.                       &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2229&lt;/span&gt;    IN      NS      b.root-servers.net.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;.                       &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2229&lt;/span&gt;    IN      NS      h.root-servers.net.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;.                       &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2229&lt;/span&gt;    IN      NS      i.root-servers.net.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;.                       &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2229&lt;/span&gt;    IN      NS      l.root-servers.net.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;.                       &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2229&lt;/span&gt;    IN      NS      c.root-servers.net.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;.                       &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2229&lt;/span&gt;    IN      NS      a.root-servers.net.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;.                       &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2229&lt;/span&gt;    IN      NS      d.root-servers.net.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;.                       &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2229&lt;/span&gt;    IN      NS      e.root-servers.net.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;.                       &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2229&lt;/span&gt;    IN      NS      m.root-servers.net.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;.                       &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2229&lt;/span&gt;    IN      NS      f.root-servers.net.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;.                       &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2229&lt;/span&gt;    IN      NS      g.root-servers.net.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;.                       &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2229&lt;/span&gt;    IN      NS      j.root-servers.net.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;;&lt;/span&gt; Received &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;239&lt;/span&gt; bytes from 10.8.0.1#53&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;10.8.0.1&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt; in &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;4&lt;/span&gt; ms
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 根服务器返回通用定义域名的名字列表&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;com.                    &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;172800&lt;/span&gt;  IN      NS      a.gtld-servers.net.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;com.                    &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;172800&lt;/span&gt;  IN      NS      b.gtld-servers.net.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;com.                    &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;172800&lt;/span&gt;  IN      NS      c.gtld-servers.net.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;com.                    &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;172800&lt;/span&gt;  IN      NS      d.gtld-servers.net.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;com.                    &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;172800&lt;/span&gt;  IN      NS      e.gtld-servers.net.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;com.                    &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;172800&lt;/span&gt;  IN      NS      f.gtld-servers.net.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;com.                    &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;172800&lt;/span&gt;  IN      NS      g.gtld-servers.net.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;com.                    &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;172800&lt;/span&gt;  IN      NS      h.gtld-servers.net.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;com.                    &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;172800&lt;/span&gt;  IN      NS      i.gtld-servers.net.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;com.                    &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;172800&lt;/span&gt;  IN      NS      j.gtld-servers.net.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;com.                    &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;172800&lt;/span&gt;  IN      NS      k.gtld-servers.net.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;com.                    &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;172800&lt;/span&gt;  IN      NS      l.gtld-servers.net.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;com.                    &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;172800&lt;/span&gt;  IN      NS      m.gtld-servers.net.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;com.                    &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;86400&lt;/span&gt;   IN      DS      &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;30909&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;8&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2&lt;/span&gt; E2D3C916F6DEEAC73294E8268FB5885044A833FC5459588F4A9184CF C41A5766
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;com.                    &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;86400&lt;/span&gt;   IN      RRSIG   DS &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;8&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;86400&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;20230921210000&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;20230908200000&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;11019&lt;/span&gt; . M02FKEukwDc7T/KjNtpdCfwvkzHx1STqPt3AO/eXQxqBU7jN9vrHbJMJ PNXpBlO5p+HgnZ9w0c7sR8qnDXFl1OziNAo0el1fRq0YFwBae9BgoLCg IeZVoZmqerXpVXCrpKX1Fb+ILjuIX1bL5li2xQ/gpq4u91EijGvZg6sQ UmBiQW0JlXKR927uOm+aJHN6Ujnzd7sZrOWpSXQAOVPf4dHjvCJNohfs V9cJkjBRI+QuOpArJ+gCGKoiMidjYZBuYXIsYV7PYLQbVfVZg2E3JFXX h5BkqZUlCZbabAcVCzQ6BGZMpxcs1A/J8g/7+eguU6bJFpbiBXeHEZhx &lt;span style=&#34;color:#000&#34;&gt;TS1zoQ&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;==&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;;&lt;/span&gt; Received &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1173&lt;/span&gt; bytes from 192.58.128.30#53&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;j.root-servers.net&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt; in &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;8&lt;/span&gt; ms
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 通用顶级域名返回 baidu.com. 域的 DNS 服务器名字列表&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;baidu.com.              &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;172800&lt;/span&gt;  IN      NS      ns2.baidu.com.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;baidu.com.              &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;172800&lt;/span&gt;  IN      NS      ns3.baidu.com.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;baidu.com.              &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;172800&lt;/span&gt;  IN      NS      ns4.baidu.com.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;baidu.com.              &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;172800&lt;/span&gt;  IN      NS      ns1.baidu.com.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;baidu.com.              &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;172800&lt;/span&gt;  IN      NS      ns7.baidu.com.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;CK0POJMG874LJREF7EFN8430QVIT8BSM.com. &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;86400&lt;/span&gt; IN NSEC3 &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt; - CK0Q2D6NI4I7EQH8NA30NS61O48UL8G5 NS SOA RRSIG DNSKEY NSEC3PARAM
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;CK0POJMG874LJREF7EFN8430QVIT8BSM.com. &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;86400&lt;/span&gt; IN RRSIG NSEC3 &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;8&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;86400&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;20230915042421&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;20230908031421&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;4459&lt;/span&gt; com. ACWanRvoDIwYH40J5TjA8G6UXUldpz8+aNZdFlLO1eY9GRalvfLnpa6H RqiP03pvORSpHJEv2+HuQ1HtWTCj/nlJOeiRKG0Bk/HjcjkH9yv1b6pF ASeyvdJYN2wYPp4e1KPVe3GuoxBETq6kPKfUhR289IzQFy5vLgIfeVWK &lt;span style=&#34;color:#000&#34;&gt;pR6z0kgCFKTKaO21nj2LxxWsxmfuIpe8ztJuPTF7lVhXhw&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;==&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;HPVV0C47Q7CQMTAJM90K1FBFJBRP4B4D.com. &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;86400&lt;/span&gt; IN NSEC3 &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt; - HPVVAN8CFKHHHMEIDVJHFNQEOI5G6C89 NS DS RRSIG
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;HPVV0C47Q7CQMTAJM90K1FBFJBRP4B4D.com. &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;86400&lt;/span&gt; IN RRSIG NSEC3 &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;8&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;86400&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;20230914060727&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;20230907045727&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;4459&lt;/span&gt; com. oUS/iAWQKq/0KHQdg18vwuUvT1Ftl8tnpHZVCwdQPEaIq3gceZnmpE2Z u8pj+JPFOUqp/DWRNlWZYMmTuhSjJil7cCpahWk3+RJbeJQIWPtNvBkl BBmM1M3he1ELoS37YqcflA8U/q4CaNdEpIS7OiNy6f4efrkZMvqRZZ9U hRgI2CugaGb6C9mDeAfThooAqsc5xFCX9KjWGsNLr0pE+Q&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;==&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;;&lt;/span&gt; Received &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;849&lt;/span&gt; bytes from 192.48.79.30#53&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;j.gtld-servers.net&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt; in &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;316&lt;/span&gt; ms
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# ns3.baidu.com 返回 www.baidu.com 的解析结果&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;www.baidu.com.          &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1200&lt;/span&gt;    IN      CNAME   www.a.shifen.com.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;;&lt;/span&gt; Received &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;100&lt;/span&gt; bytes from 153.3.238.93#53&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;ns3.baidu.com&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt; in &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;24&lt;/span&gt; ms
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这是集中查询的抓包过程(建议在新 tab 中打开图片对比说明查看)&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://passage-1253400711.cos.ap-beijing.myqcloud.com/2023-09-09-143516.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;包序号&lt;/th&gt;
&lt;th&gt;包功能&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1, 2&lt;/td&gt;
&lt;td&gt;从 10.8.0.1 DNS 服务器获得根服务器的地址&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 24, 25, 26&lt;/td&gt;
&lt;td&gt;向 192.168.1.1 和 10.8.0.1 查询根服务器的地址 (两个网卡都发送了查询请求)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 28, 29, 30, 31&lt;/td&gt;
&lt;td&gt;10.8.0.1 和 192.168.1.1 返回 DNS 根服务器地址&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;26&lt;/td&gt;
&lt;td&gt;向根服务器 &lt;code&gt;g.root-servers.net.&lt;/code&gt; 查询 &lt;code&gt;www.baidu.com.&lt;/code&gt; 的地址&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;32&lt;/td&gt;
&lt;td&gt;根服务器 &lt;code&gt;g.root-servers.net.&lt;/code&gt; 返回通用顶级域名列表及其地址 &lt;code&gt;[a-j].gtld-servers.net&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45&lt;/td&gt;
&lt;td&gt;向 10.8.0.1 查询通用顶级域名的 IP&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59&lt;/td&gt;
&lt;td&gt;10.8.0.1 返回通用顶级域名的 IP&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;46&lt;/td&gt;
&lt;td&gt;向通用顶级域名 DNS server &lt;code&gt;i.gtld-servers.net&lt;/code&gt; 查询 &lt;a href=&#34;https://www.baidu.com&#34;&gt;www.baidu.com&lt;/a&gt; 的 IP&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;60&lt;/td&gt;
&lt;td&gt;&lt;code&gt;i.gtld-servers.net&lt;/code&gt; DNS返回 &lt;code&gt;baidu.com.&lt;/code&gt; 域的 DNS 服务器 &lt;code&gt;ns[12347].baidu.com&lt;/code&gt; 的名字&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;61, 62, 63, 64, 65, 69&lt;/td&gt;
&lt;td&gt;向 192.168.1.1 和 10.8.0.1 查询 &lt;code&gt;ns[12347].baidu.com&lt;/code&gt; 的 IP&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;66,67,68,71,72,73&lt;/td&gt;
&lt;td&gt;192.168.1.1 和 10.8.0.1 返回 &lt;code&gt;ns[12347].baidu.com&lt;/code&gt; 的 IP&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;70&lt;/td&gt;
&lt;td&gt;向 &lt;code&gt;ns2.baidu.com&lt;/code&gt; 查询 &lt;code&gt;www.baidu.com&lt;/code&gt; 的地址&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;74&lt;/td&gt;
&lt;td&gt;&lt;code&gt;ns2.baidu.com&lt;/code&gt; 返回 &lt;code&gt;www.baidu.com&lt;/code&gt; 的地址，它是 &lt;code&gt;www.a.shifen.com&lt;/code&gt; 地址的别名&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;参考链接&#34;&gt;参考链接&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.cnblogs.com/pannengzhi/p/6262076.html&#34;&gt;关于DNS,你应该知道这些&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: 在 Ubuntu 22.04 上搭建 NFS Server</title>
      <link>https://bwangelme.github.io/647/docs/linux/nfs-server/</link>
      <pubDate>Wed, 06 Sep 2023 08:51:39 +0800</pubDate>
      
      <guid>https://bwangelme.github.io/647/docs/linux/nfs-server/</guid>
      <description>
        
        
        &lt;h2 id=&#34;环境准备&#34;&gt;环境准备&lt;/h2&gt;
&lt;p&gt;我准备了两台机器&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;name&lt;/th&gt;
&lt;th&gt;ip&lt;/th&gt;
&lt;th&gt;user&lt;/th&gt;
&lt;th&gt;user_id&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;server&lt;/td&gt;
&lt;td&gt;191.168.58.11&lt;/td&gt;
&lt;td&gt;vagrant&lt;/td&gt;
&lt;td&gt;1000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;client&lt;/td&gt;
&lt;td&gt;192.168.58.1&lt;/td&gt;
&lt;td&gt;xuyundong&lt;/td&gt;
&lt;td&gt;1000&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;安装组件&#34;&gt;安装组件&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;服务端安装 nfs server&lt;/li&gt;
&lt;/ul&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;sudo apt update
sudo apt install nfs-kernel-server
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;客户端安装 nfs-common&lt;/li&gt;
&lt;/ul&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;sudo apt update
sudo apt install nfs-common
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;服务端创建目录并导出&#34;&gt;服务端创建目录并导出&lt;/h2&gt;
&lt;h3 id=&#34;在服务端上创建挂载目录并设置权限&#34;&gt;在服务端上创建挂载目录，并设置权限&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;sudo mkdir -p /mnt/share
sudo chown vagrant:vagrant /mnt/share
sudo chmod 755 /mnt/share
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;服务端上配置-nfs-export-目录&#34;&gt;服务端上配置 nfs export 目录&lt;/h3&gt;
&lt;p&gt;修改 &lt;code&gt;/etc/exports&lt;/code&gt; 文件, 加入以下内容&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;/mnt/share       *(rw,async,no_subtree_check)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;关于 export 选项的解释&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;rw&lt;/code&gt;: 客户端具有读和写的权限&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sync&lt;/code&gt;: 强制 nfs 在回复 client 之前将更改写入磁盘，这保证了 nfs server 的可靠性，但也降低了写入速度&lt;/li&gt;
&lt;li&gt;&lt;code&gt;no_subtree_check&lt;/code&gt;: 此选项可防止子树检查，在子树检查过程中，主机必须为每个请求检查文件在导出的树中是否仍然可用。当客户端打开文件时重命名文件时，这可能会导致许多问题。&lt;strong&gt;通常建议禁用子树检查&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;no_root_squash&lt;/code&gt;: 当客户端以 root 权限写入文件时，nfs server 会将文件 owner 改成普通用户，当此选项开启时，nfs server 不修改 root 写入文件的 woner&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;修改完以后执行以下命令载入配置&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;sudo systemctl restart nfs-kernel-server
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;客户端挂载&#34;&gt;客户端挂载&lt;/h2&gt;
&lt;p&gt;客户端执行以下命令挂载&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 将服务端的 nfs 目录挂载到了客户端的 /home/xuyundong/tmp/nfs_exmaple 中&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo mount 192.168.58.11:/mnt/share /home/xuyundong/tmp/nfs_exmaple
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;修改 &lt;code&gt;/etc/fstab&lt;/code&gt; 文件，将以下内容写入可以让 client 在开机启动时自动挂载&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;192.168.58.11:/mnt/share   /home/xuyundong/tmp/nfs_exmaple   nfs auto,nofail,noatime,nolock,intr,tcp,actimeo=1800 0 0
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;测试访问&#34;&gt;测试访问&lt;/h2&gt;
&lt;p&gt;在客户端的目录中，&lt;strong&gt;以 uid=1000 的用户执行&lt;/strong&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;echo &amp;#34;abc&amp;#34; &amp;gt; test.txt
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;可以看到文件正常写入了。&lt;/p&gt;
&lt;p&gt;这是因为 client 的写入的用户的 uid 是 1000, server 中目录的 owner 的 uid 也是 1000, owner 相同就能正常写入。&lt;/p&gt;
&lt;h2 id=&#34;取消挂载&#34;&gt;取消挂载&lt;/h2&gt;
&lt;p&gt;客户端执行以下命令可以取消挂载&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;sudo umount ~/tmp/nfs_exmaple
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;参考链接&#34;&gt;参考链接&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.digitalocean.com/community/tutorials/how-to-set-up-an-nfs-mount-on-ubuntu-22-04&#34;&gt;How To Set Up an NFS Mount on Ubuntu 22.04&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: ls Tips</title>
      <link>https://bwangelme.github.io/647/docs/linux/ls-tips.md/</link>
      <pubDate>Tue, 16 Aug 2022 23:10:06 +0800</pubDate>
      
      <guid>https://bwangelme.github.io/647/docs/linux/ls-tips.md/</guid>
      <description>
        
        
        &lt;h2 id=&#34;ls-按照修改时间排序&#34;&gt;ls 按照修改时间排序&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-t&lt;/code&gt; 按照修改时间排序&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-r&lt;/code&gt; 逆序排序&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;xuyundong@Macmini:~/Github/blog$ ls -lt content/tips/
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-rw-rw-r-- &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt; xuyundong xuyundong  &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;800&lt;/span&gt; 8月  &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;16&lt;/span&gt; 23:13 ls-tips.md.md
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-rw-rw-r-- &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt; xuyundong xuyundong &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2644&lt;/span&gt; 8月  &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;16&lt;/span&gt; 23:05 docker-registry.md
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-rw-rw-r-- &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt; xuyundong xuyundong &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1990&lt;/span&gt; 8月  &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;11&lt;/span&gt; 22:01 stty.md
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;xuyundong@Macmini:~/Github/blog$ ls -lrt content/tips
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-rw-rw-r-- &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt; xuyundong xuyundong &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1990&lt;/span&gt; 8月  &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;11&lt;/span&gt; 22:01 stty.md
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-rw-rw-r-- &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt; xuyundong xuyundong &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2644&lt;/span&gt; 8月  &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;16&lt;/span&gt; 23:05 docker-registry.md
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-rw-rw-r-- &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt; xuyundong xuyundong  &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;897&lt;/span&gt; 8月  &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;16&lt;/span&gt; 23:11 ls-tips.md.md
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
    <item>
      <title>Docs: 查看信号的快捷键</title>
      <link>https://bwangelme.github.io/647/docs/linux/stty/</link>
      <pubDate>Tue, 09 Aug 2022 21:43:40 +0800</pubDate>
      
      <guid>https://bwangelme.github.io/647/docs/linux/stty/</guid>
      <description>
        
        
        &lt;hr&gt;
&lt;h2 id=&#34;tips&#34;&gt;Tips&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;stty&lt;/code&gt;命令的作用是 &lt;code&gt;change and print terminal line settings&lt;/code&gt;，查看或修改 Linux 终端的配置。&lt;/p&gt;
&lt;p&gt;今天遇到的需求是想查一下 &lt;code&gt;Ctrl-C&lt;/code&gt; 按键发送的系统信号 ( &lt;a href=&#34;https://man7.org/linux/man-pages/man7/signal.7.html&#34;&gt;man 7 signal&lt;/a&gt; )，搜了一下发现 stty 是最方便的查询命令&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ø&amp;gt; stty -a
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;speed &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;38400&lt;/span&gt; baud&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt; rows 68&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt; columns 128&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;line&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; 0&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;####################  我们主要关心这两行的内容&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;intr&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; ^C&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;quit&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; ^&lt;span style=&#34;color:#4e9a06&#34;&gt;\;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;erase&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; ^?&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#204a87&#34;&gt;kill&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; ^U&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;eof&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; ^D&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;eol&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &amp;lt;undef&amp;gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;eol2&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &amp;lt;undef&amp;gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;swtch&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &amp;lt;undef&amp;gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;start&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; ^Q&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;stop&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; ^S&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;susp&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; ^Z&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;rprnt&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; ^R&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;werase&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; ^W&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;lnext&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; ^V&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;discard&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; ^O&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;min&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; 1&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#204a87&#34;&gt;time&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; 0&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;####################&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-parenb -parodd -cmspar cs8 -hupcl -cstopb cread -clocal -crtscts
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-ignbrk -brkint -ignpar -parmrk -inpck -istrip -inlcr -igncr icrnl -ixon -ixoff -iuclc -ixany -imaxbel -iutf8
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;opost -olcuc -ocrnl onlcr -onocr -onlret -ofill -ofdel nl0 cr0 tab0 bs0 vt0 ff0
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;isig icanon iexten &lt;span style=&#34;color:#204a87&#34;&gt;echo&lt;/span&gt; echoe echok -echonl -noflsh -xcase -tostop -echoprt echoctl echoke -flusho -extproc
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;stty 输出的解释如下:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;^C&lt;/code&gt; (&lt;code&gt;ctrl+c&lt;/code&gt;) 发送 interrupt 信号&lt;/li&gt;
&lt;li&gt;&lt;code&gt;^\&lt;/code&gt; (&lt;code&gt;ctr+\&lt;/code&gt;) 发送 quit 信号&lt;/li&gt;
&lt;li&gt;&lt;code&gt;^?&lt;/code&gt; 清除上一个输入的字符&lt;/li&gt;
&lt;li&gt;&lt;code&gt;^U&lt;/code&gt; 删除当前行&lt;/li&gt;
&lt;li&gt;&lt;code&gt;^D&lt;/code&gt; 输入 EOF 字符(结束当前输入)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;^S&lt;/code&gt; 暂停输出&lt;/li&gt;
&lt;li&gt;&lt;code&gt;^Q&lt;/code&gt; 在暂停输出后，重新开始输出&lt;/li&gt;
&lt;li&gt;&lt;code&gt;^Z&lt;/code&gt; 发送一个 terminal stop 信号&lt;/li&gt;
&lt;li&gt;&lt;code&gt;^W&lt;/code&gt; 删除最近输入的一个单词&lt;/li&gt;
&lt;/ul&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;while true;do
    date;
    sleep 1
done
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;(我用上面的代码测试 &lt;code&gt;^S&lt;/code&gt; 和 &lt;code&gt;^Q&lt;/code&gt;, 发现不生效)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;stty 其他输入的含义，请参考 &lt;a href=&#34;https://linux.die.net/man/1/stty&#34;&gt;man 1 stty&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;参考链接&#34;&gt;参考链接&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://unix.stackexchange.com/a/362579/191858&#34;&gt;List of terminal generated signals (eg Ctrl-C -&amp;gt; SIGINT)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://linux.die.net/man/1/stty&#34;&gt;man 1 stty&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
      </description>
    </item>
    
    <item>
      <title>Docs: Glob 语法解析</title>
      <link>https://bwangelme.github.io/647/docs/linux/glob-%E8%AF%AD%E6%B3%95/</link>
      <pubDate>Mon, 18 Oct 2021 11:38:23 +0800</pubDate>
      
      <guid>https://bwangelme.github.io/647/docs/linux/glob-%E8%AF%AD%E6%B3%95/</guid>
      <description>
        
        
        &lt;p&gt;Glob 语法&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;tips&#34;&gt;Tips&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;通配符&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;th&gt;例子&lt;/th&gt;
&lt;th&gt;匹配&lt;/th&gt;
&lt;th&gt;不匹配&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;*&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;匹配任意数量的任何字符，包括无&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Law*&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Law, Laws, Lawyer&lt;/td&gt;
&lt;td&gt;GrokLaw, La, aw&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;?&lt;/td&gt;
&lt;td&gt;匹配任何 单个 字符&lt;/td&gt;
&lt;td&gt;?at&lt;/td&gt;
&lt;td&gt;Cat, cat, Bat, bat&lt;/td&gt;
&lt;td&gt;at&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;[abc]&lt;/td&gt;
&lt;td&gt;匹配括号中给出的一个字符&lt;/td&gt;
&lt;td&gt;[CB]at&lt;/td&gt;
&lt;td&gt;Cat, Bat&lt;/td&gt;
&lt;td&gt;cat, bat&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;[a-z]&lt;/td&gt;
&lt;td&gt;匹配括号中给出的范围中的一个字符&lt;/td&gt;
&lt;td&gt;Letter[0-9]&lt;/td&gt;
&lt;td&gt;Letter0, Letter1 … Letter9&lt;/td&gt;
&lt;td&gt;Letters, Letter, Letter10&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;[!abc]&lt;/td&gt;
&lt;td&gt;匹配括号中未给出的一个字符&lt;/td&gt;
&lt;td&gt;[!C]at&lt;/td&gt;
&lt;td&gt;Bat, bat, cat&lt;/td&gt;
&lt;td&gt;Cat&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;[!a-z]&lt;/td&gt;
&lt;td&gt;匹配不在括号内给定范围内的一个字符&lt;/td&gt;
&lt;td&gt;Letter[!3-5]&lt;/td&gt;
&lt;td&gt;Letter1…&lt;/td&gt;
&lt;td&gt;Letter3 … Letter5, Letterxx&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;Gitignore&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;git 的 .gitignore 文件可以使用 glob 模式匹配， 另外还有一些规则：&lt;/p&gt;
&lt;p&gt;所有空行或者以 # 开头的行都会被 Git 忽略
匹配模式可以以 / 开头防止递归
匹配模式可以以 / 结尾指定目录
要忽略指定模式以外的文件或目录，可以在模式前加上惊叹号 ! 取反&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Python&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Python 有进行 glob 匹配的标准库， 使用也很简单：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-py&#34; data-lang=&#34;py&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# -*- coding: utf-8 -*-&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;glob&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# glob 只有两个函数， 功能差不多， 只不过一个返回列表， 一个返回迭代器&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;glob&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;glob&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;*.org&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;  &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 返回所有后缀名为 .org 的文件&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;glob&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;iglob&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;*/&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;  &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 返回匹配所有目录的迭代器&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;参考链接&#34;&gt;参考链接&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://rgb-24bit.github.io/blog/2018/glob.html&#34;&gt;Glob 语法及解析&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
      </description>
    </item>
    
    <item>
      <title>Docs: 【流水账】利用闲置笔记本搭建自己的开发服务器</title>
      <link>https://bwangelme.github.io/647/docs/linux/laptop-server/</link>
      <pubDate>Mon, 27 Mar 2017 16:41:36 +0000</pubDate>
      
      <guid>https://bwangelme.github.io/647/docs/linux/laptop-server/</guid>
      <description>
        
        
        &lt;ol&gt;
&lt;li&gt;对Ubuntu服务器进行基础配置&lt;/li&gt;
&lt;li&gt;配置dnsmasq服务器&lt;/li&gt;
&lt;li&gt;文章没什么技术含量，主要记录一些配置文件的位置&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;最近新入手了一台MacBook Air，原来的ThinkPad就闲置下来了，感觉一直放着太浪费了，就重装了一个Ubuntu Server 16.04的系统，用来做自己的开发服务器。折腾了几个小时，就都搞定了，特意写下这篇文章，来记录一下自己折腾的过程。&lt;/p&gt;
&lt;h2 id=&#34;基础配置&#34;&gt;基础配置&lt;/h2&gt;
&lt;p&gt;服务器安装的过程就不说了，大都是那么几步。有一个奇怪的问题就是安装的时候，需要设置时区，我竟然没有找到东八区，只好先设置了一个太平洋时区，好尴尬，不知道是不是Ubuntu的文本安装界面没有东八区这个选项，还是我英文太差了，没有找到。&lt;/p&gt;
&lt;h3 id=&#34;设置时间&#34;&gt;设置时间&lt;/h3&gt;
&lt;p&gt;由于安装时我们设置了错误的时区，所以首先需要调整一下时区。Ubuntu 16.04已经完全集成了Systemd，所以我们只需要通过&lt;code&gt;sudo timedatectl set-timezone Asia/Shanghai&lt;/code&gt;命令，就可以将时区设置为亚洲/上海了，同时我们也可以运行&lt;code&gt;sudo timedatectl set-ntp 1&lt;/code&gt;命令，打开自动从 NTP 服务器同步时间，一会之后服务器时间就正常了。&lt;code&gt;timedatectl&lt;/code&gt;命令还有一个选项是&lt;code&gt;set-local-rtc&lt;/code&gt;，用来将硬件时间设置为本地时间，而不是UTC时间，这个选项我默认是关闭的。&lt;/p&gt;
&lt;h3 id=&#34;更改软件源为中科大源&#34;&gt;更改软件源为中科大源&lt;/h3&gt;
&lt;p&gt;接下来，就是更改源了，打开&lt;code&gt;/etc/apt/sources.list&lt;/code&gt;文件，将所有的&lt;code&gt;us.archive.ubuntu.com&lt;/code&gt;替换成&lt;code&gt;mirrors.ustc.edu.cn&lt;/code&gt;就可以了，注意这里由于我安装的时候选择的是美国的源，所以域名为&lt;code&gt;us.archive.ubuntu.com&lt;/code&gt;，如果选择了其他地方的源，域名可能不一样。&lt;/p&gt;
&lt;p&gt;同时要注意，&lt;code&gt;security.ubuntu.com&lt;/code&gt;这个源表示的是 Ubuntu 进行安全更新的源，用来推送紧急安全更新的补丁，这个源我建议保持原样，因为紧急安全更新的补丁还是从 Ubuntu 官方下载比较好，不建议从其他地方来下载。&lt;/p&gt;
&lt;h3 id=&#34;设置关闭盖子不休眠&#34;&gt;设置关闭盖子不休眠&lt;/h3&gt;
&lt;p&gt;由于我的电脑是笔记本，尽管没有装图形界面，但是在合上盖子之后，系统仍然会自动休眠，所以需要将这个自动休眠的功能关掉。我在网上搜索了一下，在 Askubuntu 上找到了一个相关的&lt;a href=&#34;http://askubuntu.com/questions/141866/keep-ubuntu-server-running-on-a-laptop-with-the-lid-closed&#34;&gt;问题&lt;/a&gt;，按照问题中的答案所说，向&lt;code&gt;/etc/systemd/logind.conf&lt;/code&gt;文件中添加一行&lt;code&gt;HandleLidSwitch=ignore&lt;/code&gt;，然后重启&lt;code&gt;systemd-logind.service&lt;/code&gt;服务，就关闭掉这个功能啦。&lt;/p&gt;
&lt;h2 id=&#34;配置网络环境&#34;&gt;配置网络环境&lt;/h2&gt;
&lt;p&gt;将服务器配置好以后，接下来我们就需要配置网络了。&lt;/p&gt;
&lt;h3 id=&#34;设置dhcp&#34;&gt;设置DHCP&lt;/h3&gt;
&lt;p&gt;我的笔记本是通过网线连接到路由器上的，所以，首先我们需要将有线网卡通过 DHCP 自动连接网络的功能打开。这里我在网上搜索了一下，搜到了一篇文章：&lt;a href=&#34;http://www.ubuntugeek.com/ubuntu-networking-configuration-using-command-line.html&#34;&gt;Ubuntu Networking Configuration Using Command Line &lt;/a&gt;。这篇文章很详细地介绍了Ubuntu如何设置动态IP和静态IP。我的电脑在刚装好系统的时候，没有任何关于有线网卡的配置文件，仅能够通过&lt;code&gt;ip addr&lt;/code&gt;命令来看到当前系统的网卡，在了解到有线网卡的名称为&lt;code&gt;enp12s0&lt;/code&gt;之后，我新建了一个文件&lt;code&gt;/etc/network/interfaces.d/enp12s0.conf&lt;/code&gt;，然后向其中添加了如下的内容，&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 设置网卡enp12s0在开机的时候通过 DHCP 自动连接到网络。&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;auto enp12s0
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;iface enp12s0 inet dhcp
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;上面两句配置就表示设置网卡enp12s0在开机的时候通过 DHCP 自动连接到网络。&lt;/p&gt;
&lt;h3 id=&#34;设置默认网关&#34;&gt;设置默认网关&lt;/h3&gt;
&lt;p&gt;设置好网卡的 DHCP 以后，我的服务器能够 ping 通路由器网关了，但是仍然无法 ping 通外网，显然，这是由于服务器本机的网关没有配置好，后来我又上网去搜索，发现了&lt;a href=&#34;http://askubuntu.com/questions/522420/how-to-get-default-gateway-with-a-dhcp&#34;&gt;Askubuntu 上一个类似的问题&lt;/a&gt;，其中有个答案提到，&lt;code&gt;dhclient&lt;/code&gt;只在当前服务器没有设置默认网关的时候，才会设置由 DHCP 服务器提供的路由器地址为默认网关。我通过&lt;code&gt;ip route&lt;/code&gt;看了一下我的服务器的路由表，发现默认网关为网卡&lt;code&gt;lo&lt;/code&gt;，所以 DHCP 服务器下发下来的网关地址并不会生效。我又在&lt;code&gt;/etc/network/interfaces&lt;/code&gt;中添加了如下的配置：&lt;code&gt;post-up route del default dev lo&lt;/code&gt;，删除掉默认走&lt;code&gt;lo&lt;/code&gt;设备的路由配置。&lt;/p&gt;
&lt;p&gt;然后我再来重启电脑，就发现服务器一开机就能够正常 ping 通外网了。&lt;/p&gt;
&lt;h3 id=&#34;设置路由器&#34;&gt;设置路由器&lt;/h3&gt;
&lt;p&gt;看到这里，相信大家肯定都有一些疑惑，服务器不应该是默认设置为静态IP吗，为什么你要配置 DHCP 呢。原因就在这一小节，我用的路由器是华硕的RT - N12，它的 DHCP 服务器有一个功能，就是将MAC地址和IP地址进行绑定，所以，我只需要在路由器上配置好MAC地址和IP地址的绑定，这样就相当于起到了静态IP的作用了，而且更改起来也比较方便，不需要服务器和路由器两头改。&lt;/p&gt;
&lt;h2 id=&#34;配置dns&#34;&gt;配置DNS&lt;/h2&gt;
&lt;p&gt;由于我访问我的服务器的时候想通过域名来访问(方便以后添加HTTPS证书)，所以我需要在我的内网中自己搭建一个DNS服务器，来负责服务器的域名解析。&lt;/p&gt;
&lt;h3 id=&#34;安装并设置dnsmasq&#34;&gt;安装并设置dnsmasq&lt;/h3&gt;
&lt;p&gt;由于我的需求很简单，只需要进行一个域名解析就可以了，所以我选择了&lt;a href=&#34;http://www.thekelleys.org.uk/dnsmasq/docs/dnsmasq-man.html&#34;&gt;dnsmasq&lt;/a&gt;，而不是比较复杂的bind9。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;dnsmasq&lt;/code&gt;在Ubuntu的源中直接有deb安装包，所以我们直接通过&lt;code&gt;sudo apt install dnsmasq&lt;/code&gt;命令安装即可。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;dnsmasq&lt;/code&gt;的配置我参考了文章&lt;a href=&#34;http://cjting.me/misc/2016-08-20-%E4%BD%BF%E7%94%A8Dnsmasq%E6%90%AD%E5%BB%BA%E5%86%85%E7%BD%91DNS%E6%9C%8D%E5%8A%A1%E5%99%A8.html&#34;&gt;使用Dnsmasq搭建内网DNS服务器&lt;/a&gt;。使用了如下的配置：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 设置服务器的监听地址为192.168.X.X和127.0.0.1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;listen-address&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;192.168.X.X,127.0.0.1
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 所有没有.号的域名(plain names)都不会向上游DNS Server转发，只查询hosts文件&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;domain-needed
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 所有保留IP地址段内的反向查询都不会向上游DNS Server转发，只查询hosts文件&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;bogus-priv
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 不要读取/etc/resolver中的DNS Server的配置&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;no-resolv
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 不要poll /etc/resolver文件的更新&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;no-poll
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 配置上游服务器为DNSPod的公共DNS&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;server&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;119.29.29.29
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;server&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;182.254.116.116
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;配置好了以后，我们可以通过&lt;code&gt;dnsmasq --test&lt;/code&gt;命令来检查&lt;code&gt;dnsmasq&lt;/code&gt;的配置文件语法是否正确。&lt;/p&gt;
&lt;p&gt;然后我们在服务器的&lt;code&gt;/etc/hosts&lt;/code&gt;中添加我们想要设置的解析记录，比如这台服务器我设置了如下的记录：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;192.168.X.X dev.bwangel.me
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后通过&lt;code&gt;sudo systemctl enable dnsmasq &amp;amp;&amp;amp; sudo systemctl restart dnsmasq&lt;/code&gt;命令启动&lt;code&gt;dnsmasq&lt;/code&gt;服务即可。&lt;/p&gt;
&lt;p&gt;最后我们可以通过&lt;code&gt;dig&lt;/code&gt;命令测试一下，运行如下命令: &lt;code&gt;dig dev.bwangel.me @localhost&lt;/code&gt;，看返回的IP地址是否和我们设置的解析记录相同。&lt;/p&gt;
&lt;h3 id=&#34;设置路由器-1&#34;&gt;设置路由器&lt;/h3&gt;
&lt;p&gt;配置好了DNS服务器以后，我们再来修改路由器的 DHCP 策略，设置下发的DNS服务器IP地址为我们的DNS服务器地址，这样内网中所有的DNS查询都会先经过这台DNS服务器。而我们的&lt;code&gt;dev.bwangel.me&lt;/code&gt;域名也就能够成功解析了。至此，我们的开发服务器就已经搭建好了，我们可以通过SSH连接上来，搭建我们想要的服务了。&lt;/p&gt;
&lt;h2 id=&#34;遇到的一些小坑&#34;&gt;遇到的一些小坑&lt;/h2&gt;
&lt;h3 id=&#34;dnsmasq没有绑定本地地址&#34;&gt;dnsmasq没有绑定本地地址&lt;/h3&gt;
&lt;p&gt;配置好了 DNS 服务器以后，我在服务器上 ping 百度的时候会一直卡着，但是 ping 公网 IP 却是可以 ping 通的，当时我第一反应就是DNS解析出错了，只是不知道是DNS服务器配置的有问题，还是DNS服务器的IP地址路由器没有正确地下发下来。&lt;/p&gt;
&lt;p&gt;接着我就利用dig来测试，发现使用&lt;code&gt;dig www.baidu.com @192.168.X.X&lt;/code&gt;命令可以得到正常结果，而&lt;code&gt;dig www.baidu.com @127.0.0.1&lt;/code&gt;就会卡着。然后我就觉得应该是dnsmasq没有监听&lt;code&gt;127.0.0.1&lt;/code&gt;导致的问题。最后发现服务器DNS的配置文件&lt;code&gt;/etc/resolv.conf&lt;/code&gt;中设置的默认DNS为&lt;code&gt;127.0.0.1&lt;/code&gt;，而它去查询&lt;code&gt;127.0.0.1&lt;/code&gt;的时候会卡着，也不报错，导致服务器不会使用备选的DNS服务器来查询域名，最终导致出现了 ping 百度卡着这种情况。我将dnsmasq的监听地址加上&lt;code&gt;127.0.0.1&lt;/code&gt;之后就OK了。&lt;/p&gt;
&lt;p&gt;这里还有一点没有搞清楚，路由器的 DHCP 中配置的DNS服务器并没有正确地应用，服务器还是默认遵循&lt;code&gt;/etc/resolv.conf&lt;/code&gt;文件中的配置，这个还需要进一步了解一下。&lt;/p&gt;
&lt;h3 id=&#34;ssh出现locale报错&#34;&gt;ssh出现locale报错&lt;/h3&gt;
&lt;p&gt;这个问题经常遇到了，在Mac上通过SSH连接到Ubuntu上之后，在安装更新的过程中，出现了如下的报错：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;perl: warning: Setting locale failed.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;perl: warning: Please check that your locale settings:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000&#34;&gt;LANGUAGE&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;unset&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000&#34;&gt;LC_ALL&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;unset&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000&#34;&gt;LC_MESSAGES&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;zh_CN.UTF-8&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000&#34;&gt;LANG&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;zh_CN.UTF-8&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    are supported and installed on your system.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;perl: warning: Falling back to the standard locale &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;C&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;.
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这是由于终端SSH的时候，会将本地的locale配置传到服务端上去，我的本地设置的语系是&lt;code&gt;zh_CN.UTF-8&lt;/code&gt;，但是服务器上只安装了&lt;code&gt;en_US.UTF-8&lt;/code&gt;，所以就会报错提示说找不到语系&lt;code&gt;zh_CN.UTF-8&lt;/code&gt;相关的文件。这里我们只需要修改一下服务器的&lt;code&gt;/etc/locale.gen&lt;/code&gt;配置文件，将&lt;code&gt;zh_CN.UTF-8&lt;/code&gt;相关的配置取消注释，然后再来运行&lt;code&gt;locale-gen&lt;/code&gt;命令，就会安装上&lt;code&gt;zh_CN.UTF-8&lt;/code&gt;语系相关的文件了，再来运行&lt;code&gt;perl&lt;/code&gt;程序就不会报错了。&lt;/p&gt;
      </description>
    </item>
    
    <item>
      <title>Docs: 【非技术】 Arch 下的无线自动断开</title>
      <link>https://bwangelme.github.io/647/docs/linux/arch-wireless-adapter/</link>
      <pubDate>Sun, 18 Dec 2016 14:13:44 +0000</pubDate>
      
      <guid>https://bwangelme.github.io/647/docs/linux/arch-wireless-adapter/</guid>
      <description>
        
        
        &lt;p&gt;&lt;strong&gt;摘要&lt;/strong&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;折腾 ThinkPad E430 在 Arch WiFi 自动断开的问题&lt;/li&gt;
&lt;li&gt;无线网卡型号推荐&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;问题描述&#34;&gt;问题描述&lt;/h2&gt;
&lt;p&gt;首先说明，这个问题我最终还是没有解决，最后的办法就是去上网买了一块无线网卡，所以我在标题上写上非技术的字样，表明这篇文章技术含量并不大。&lt;/p&gt;
&lt;p&gt;先说我的硬件环境吧，电脑是 ThinkPad E430，无线网卡的芯片型号是瑞昱的RTL8188CE，系统内核版本是4.8.13。&lt;/p&gt;
&lt;p&gt;出现的问题就是无线连上一段时间以后，网络会自动断开，ping 不通任何网站。而系统却还显示网络已经连接，&lt;code&gt;ip address&lt;/code&gt; 命令也能够看到无线网卡的IP地址。&lt;/p&gt;
&lt;h2 id=&#34;尝试的解决方案&#34;&gt;尝试的解决方案&lt;/h2&gt;
&lt;h3 id=&#34;方案1更改etcpppoptions配置文件&#34;&gt;方案1：更改&lt;code&gt;/etc/ppp/options&lt;/code&gt;配置文件&lt;/h3&gt;
&lt;p&gt;遇到问题当然要先谷歌啦，首先我以&lt;code&gt;arch wifi auto disconnect&lt;/code&gt;关键字来搜索，结果搜到了很多相关度不大的页面，后来又以&lt;code&gt;thinkpad e430 wifi auto disconnect&lt;/code&gt;关键字来搜索，就搜索到了&lt;a href=&#34;https://www.oschina.net/question/571626_234750&#34;&gt;开源中国社区上的一个问题&lt;/a&gt;，额，前两个回答看起来还是让人很不爽的，不禁让我想起来教主的这条&lt;a href=&#34;http://weibo.com/1401527553/EirySEJV9?type=comment&#34;&gt;微博&lt;/a&gt;，然后果断举报了。&lt;/p&gt;
&lt;p&gt;接着我在下面看到有人回答说可以更改&lt;code&gt;/etc/ppp/options&lt;/code&gt;文件中的一个配置项，我就照着去更改了，重启后发现该 WiFi 依旧抽风，方案1失败。&lt;/p&gt;
&lt;h3 id=&#34;方案2更改rtl8192ce内核模块的选项&#34;&gt;方案2：更改&lt;code&gt;rtl8192ce&lt;/code&gt;内核模块的选项&lt;/h3&gt;
&lt;p&gt;后来我一想，是不是因为我的搜索关键字范围太广了，就把关键字搞得更精确一点。我就去以&lt;code&gt;RTL8188CE linux disconnect&lt;/code&gt;和&lt;code&gt;RTL8188CE linux disconnect&lt;/code&gt;着两个关键字去搜索，果然一下子发现了有价值的内容。&lt;/p&gt;
&lt;p&gt;首先找到了是这个帖子：&lt;a href=&#34;https://forums.linuxmint.com/viewtopic.php?t=194086&#34;&gt;【SOLVED】 wifi connection problems Realtek RTL8188CE&lt;/a&gt;。发现这个帖子的时候，我感觉特别兴奋的，因为这位网友描述的问题，和我的几乎一模一样，它的网卡型号也和我的一模一样。
然后照着下面的回复，给&lt;code&gt;rtl8192ce&lt;/code&gt;模块添加了&lt;code&gt;fwlps=0 ips=0&lt;/code&gt;这两个参数，重启后发现依然跪，好吧，真是大坑。后来又去尝试编译这篇帖子中提到了&lt;code&gt;backports-20150313.tar.xz&lt;/code&gt;程序，直接出现了语法错误，好吧，果断放弃了。&lt;/p&gt;
&lt;p&gt;后来有搜索到了Arch论坛上有人讨论相关的问题，然后我就照着论坛里面人们的讨论，稀里糊涂地发现了 ThinkPad E430 在 Arch 上的 &lt;a href=&#34;https://wiki.archlinux.org/index.php/Lenovo_ThinkPad_Edge_E430#Wireless&#34;&gt;Wiki页面&lt;/a&gt;。Wiki 中就提到了无线网络的问题，然后它给出的答案也是更改&lt;code&gt;RTL8188CE&lt;/code&gt;这个内核模块的参数，不过是只需要添加一个&lt;code&gt;fwlps=0&lt;/code&gt;就好了，如果不行的话，直接去买一块 Intel Centrino wlan/bluetooth 4.0 卡吧。
我照着这个方案试了一下，果断不行，WiFi 依然跪，方案2也失败了。&lt;/p&gt;
&lt;h3 id=&#34;方案3求助于-archlinux-的邮件列表&#34;&gt;方案3：求助于 ArchLinux 的邮件列表&lt;/h3&gt;
&lt;p&gt;到此时，我已经感觉到山穷水尽了，好像真的没有办法了，于是乎就去 ArchLinux 邮件列表上发了一个&lt;a href=&#34;https://groups.google.com/forum/#!topic/archlinux-cn/UgGVBn99UOs&#34;&gt;求助帖&lt;/a&gt;：一方面想看看还能不能找到解决办法，另一方面想请教一下如果要再买一个无线网卡的话，该买什么型号的？&lt;/p&gt;
&lt;h2 id=&#34;原因分析&#34;&gt;原因分析&lt;/h2&gt;
&lt;p&gt;最后，在邮件列表中，大家分析过后，认为很有可能网卡驱动有问题。&lt;/p&gt;
&lt;p&gt;因为在网络实际上已经断开的情况下，内核依然没有收到网络断开的消息，依然认为网络是连接着的。这种情况下可能的原因是：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;内核有 BUG 导致驱动报告的事件没有反应到其他部分。&lt;/li&gt;
&lt;li&gt;驱动有 BUG 没有正确地将网络断开事件报告给内核。&lt;/li&gt;
&lt;li&gt;驱动有 BUG 在网络已经断开的情况下没有报告网络已经断开这个事件。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;而一般看来，驱动是故障的高发区。&lt;/p&gt;
&lt;p&gt;后来我又用 Wireshark 抓了一下包，发现当WiFI自动断开后，有大量的 ARP 请求，此时应该就是因为驱动有问题导致网卡罢工了，内核让它发的包发布出去，它也接受不到任何的包。&lt;/p&gt;
&lt;h2 id=&#34;网卡推荐&#34;&gt;网卡推荐&lt;/h2&gt;
&lt;p&gt;至此，看来这个驱动问题我是没法解决了，只好去重新买一块无线网卡，为了一个操作系统花上几十块钱买块网卡，虽说听起来很2，但是自己觉得还是很划算的。&lt;/p&gt;
&lt;p&gt;目前无线网卡的芯片主要有这么几种：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Ralink(雷凌，台湾)&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Ralink Technology公司成立于2001年，总部位于台湾新竹，并在美国加州Cupertino设有研发中心。目前已知的Edimax、Tenda、ASUS及D-link都有采用Ralink的产品。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;oroadcomd(博通，美国)&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Broadcom芯片是最成熟、最稳定的一种，而且还可以使用DD-WRT这种第三方开源固件改善性能，增加功能。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Atheros(创锐讯，美国)&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Atheros 在1999年由斯坦福大学的Teresa Meng博士和斯坦福大学校长，MIPS创始人John Hennessy博士共同在硅谷创办。Atheros的芯片被各大厂商所广泛采用，Netgear、D-Link、Intel等厂商均为Atheros客户。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Realtek(瑞昱，台湾)&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;瑞昱半导体于1987年在台湾的新竹科学园区成立，我的电脑的无线网卡芯片就是这个牌子的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;总的来说，无论是抓包，开热点还是兼容性(不仅针对 Linux)，Atheros 的 AR9271 都是比较合适的。据同事说，使用下来最稳定的 USB 网卡就是网件的 WNA1100，某宝上二手的洋垃圾也就十几块钱。&lt;/p&gt;
&lt;h2 id=&#34;写在最后&#34;&gt;写在最后&lt;/h2&gt;
&lt;p&gt;最终我还是去某宝上买了一块 USB 无线网卡。再此，要感谢邮件列表中的热心群众，感谢他们能够帮我解决问题和推荐网卡，我从中也学到了很多。&lt;/p&gt;
&lt;p&gt;最后附上我在解决问题的过程中参考到的页面：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.oschina.net/question/571626_234750&#34;&gt;ubuntu14.04 wifi频繁掉线&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://forums.linuxmint.com/viewtopic.php?t=194086&#34;&gt;【SOLVED】wifi connection problems Realtek RTL8188CE&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://wiki.archlinux.org/index.php/Lenovo_ThinkPad_Edge_E430#Wireless&#34;&gt;Lenovo ThinkPad Edge E430 - Arch Wiki&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://item.taobao.com/item.htm?spm=a230r.1.14.62.DbhWkt&amp;amp;id=538494346626&amp;amp;ns=1&amp;amp;abbucket=19#detail&#34;&gt;没错，你没有看错，这是一个淘宝页面，我参考了它的宝贝详情&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://groups.google.com/forum/#!topic/archlinux-cn/UgGVBn99UOs&#34;&gt;ArchLinux 的邮件列表&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
      </description>
    </item>
    
  </channel>
</rss>
